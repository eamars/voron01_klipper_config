[include mainsail.cfg]


#####################################################################
#     MCU Settings
#####################################################################
[mcu]
# xy mcu
canbus_uuid: d1324cee199d

[mcu z]
canbus_uuid: 71dd05832d26

[mcu e]
canbus_uuid: 1fce556b1be3

[mcu ercf]
canbus_uuid: 17aa32738d4e

[mcu display]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_39000B001243565335383320-if00
restart_method: command


#####################################################################
#     MCU Temperature MCU Settings
#####################################################################

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: -273
max_temp: 100


[temperature_sensor mcu_xy]
sensor_type: temperature_mcu
min_temp: -273
max_temp: 100

[temperature_sensor mcu_z]
sensor_type: temperature_mcu
sensor_mcu: z
min_temp: -273
max_temp: 100

[temperature_sensor mcu_e]
sensor_type = ATC Semitec 104GT-2
sensor_pin = e:PA4
min_temp: -273
max_temp: 100


[printer]
kinematics: corexy
max_velocity: 1200
max_accel: 30000
max_z_velocity: 30
max_z_accel: 1000
square_corner_velocity: 8.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_y]
step_pin: gpio7
dir_pin: gpio8
enable_pin: !gpio6
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 40                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: gpio9
interpolate: False
run_current: 1.2  
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio23  												    # If you have Mellows 2209 drivers they have a small dip switch on the driver to enable sensorless homing, other wise no jumper is needed 
driver_SGTHRS: 105

[stepper_x]
step_pin: gpio2
dir_pin: gpio1
enable_pin: !gpio3
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 122
position_max: 122
homing_speed: 40                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: gpio0
interpolate: False
run_current: 1.2
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio22  												    # If you have Mellows 2209 drivers they have a small dip switch on the driver to enable sensorless homing, other wise no jumper is needed
driver_SGTHRS: 105  	



#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: z:PD0
dir_pin: !z:PD1
enable_pin: !z:PD2
rotation_distance: 8                                                # For T8x8 integrated lead screw
microsteps: 32
endstop_pin: ^z:PB6
#position_endstop: 120
position_max: 120
position_min: -1.5
homing_speed: 20
second_homing_speed: 3.0
homing_retract_dist: 3.0



[tmc2209 stepper_z]
uart_pin: z:PA15
interpolate: False
## For OMC (StepperOnline) 17LS13-0404E-200G 0.4A 
#run_current: 0.2
## For LDO-42STH25-1004CL200E 1.0A
run_current: 0.37
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle


#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: e:PB4
dir_pin: e:PB3
enable_pin: !e:PA15
## For OMC (StepperOnline) 14HR07-1004VRN 1A 0.9°
#full_steps_per_rotation: 400                                     
## For LDO 36STH20-1004AHG 1A 1.8° stepper motor
full_steps_per_rotation: 200                                       
rotation_distance: 4.637  # Orbiter2
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: e:PA8

# Sensor
sensor_type: MAX31865
sensor_pin: e:PB12
spi_bus: spi2
rtd_reference_r: 430
rtd_num_of_wires: 4

#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 38.902
#pid_Ki: 1.441
#pid_Kd: 262.586

min_temp: -273
max_temp: 300
min_extrude_temp: 190
max_extrude_only_distance: 200000
max_extrude_cross_section: 50
pressure_advance: 0.04                                               # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: e:PB5
interpolate: False
## For OMC (StepperOnline) 14HR07-1004VRN 1A 0.9°
#run_current: 0.5 # for OMC 14HR07-1004VRN rated at 1A
## For LDO LDO 36STH17-1004AHG 1A 1.8° 
#run_current: 0.3 # for LDO 36STH17-1004AHG
## For LDO LDO 36STH20-1004AHG 1A 1.8° 
run_current: 0.65 # for LDO 36STH20-1004AHG
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder  


[heater_bed]
heater_pin: z:PA2
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use " Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: z:PA3
smooth_time: 3.0
# max_power: 0.85                                                     # Only needed for 100w pads
min_temp: -273
max_temp: 130

#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122


#####################################################################
# Fan Control
#####################################################################

[heater_fan hotend_fan]
pin: e:PB10
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0                                                     # You can't PWM the delta fan unless using blue wire

[fan]
pin: e:PB11
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
# off_below: 0.13
cycle_time: 0.010

[fan_generic nevermore_fan]
pin: z:PA1
max_power: 1.0
shutdown_speed: 0.0

[controller_fan electronic_bay_fans]
pin: z:PA0
kick_start_time: 0.5
max_power: 0.4
shutdown_speed: 0.0
idle_timeout: 150  # 150s after the motor is deactivated
stepper: stepper_x,stepper_y,stepper_z,extruder
heater: extruder

#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 3600

[homing_override]
axes: xyz
set_position_z: 0
gcode:

  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    # Move to center then home Y
    G90
    G1 X{printer.toolhead.axis_maximum.x / 2} F7200
    _HOME_Y
    G91
    G1 Y-2 F7200
    G90
  {% endif %}
  

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right
Probe_height: 0.1

[exclude_object]

[include sensorless.cfg]

[sensorless_homing_helper]
tmc_stepper_y_name: tmc2209 stepper_y       # The TMC stepper section name for Y
tmc_stepper_x_name: tmc2209 stepper_x       # The TMC stepper section name for X
home_current: 0.7                           # The current while running the sensorless homing

minimum_homing_distance: 10                 # (Optional) The minimum distance to achieve the repeatible sensorless homing
retract_distance: 10                        # (Optional) The retract distance after the axis is homed
retract_speed: 20                           # (Optional) The speed while running the retraction (both before and after homing)
stallguard_reset_time: 1                    # (Optional) The time for stallguard to reset before the next homing move

[pause_resume]
recover_velocity: 300

[include ercf.cfg]

#####################################################################
#   V0 Display
#####################################################################

[display]
lcd_type: sh1106
i2c_mcu: display
i2c_bus: i2c1a
# Set the direction of the encoder wheel
#   Standard: Right (clockwise) scrolls down or increases values. Left (counter-clockwise scrolls up or decreases values.
encoder_pins: ^display:PA3, ^display:PA4
#   Reversed: Right (clockwise) scrolls up or decreases values. Left (counter-clockwise scrolls down or increases values.
#encoder_pins: ^display:PA4, ^display:PA3
click_pin: ^!display:PA1
kill_pin: ^!display:PA5
x_offset: 2
#   Use X offset to shift the display towards the right. Value can be 0 to 3
vcomh: 63
#   Set the Vcomh value on SSD1306/SH1106 displays. This value is
#   associated with a "smearing" effect on some OLED displays. The
#   value may range from 0 to 63. Default is 0.
#   Adjust this value if you get some vertical stripes on your display. (31 seems to be a good value)


#####################################################################
# Resonance Compensation
#####################################################################

[adxl345]
cs_pin: e:PA9
# spi_software_sclk_pin: sht36:PA5
# spi_software_mosi_pin: sht36:PA7
# spi_software_miso_pin: sht36:PA6
spi_bus: spi2

[resonance_tester]
accel_chip: adxl345
probe_points:
    60, 60, 20  # an example


#####################################################################
# Macros
#####################################################################
[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}


[gcode_macro MOVE_TO_CENTER]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=move_to_center
    G90
    G0 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_maximum.y / 2} Z50 F10000
    RESTORE_GCODE_STATE NAME=move_to_center

[gcode_macro PARKCENTER]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=part_center
    G90
    G0 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_maximum.y / 2} F30000
    RESTORE_GCODE_STATE NAME=part_center

[gcode_macro PARKFRONT]
gcode:
    CG28                                                                                                                        ; home if not already homed
    SAVE_GCODE_STATE NAME=park_front
    G90                                                                                                                         ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+10} F30000        
    RESTORE_GCODE_STATE NAME=park_front

[gcode_macro PARKREARRIGHT]
gcode:
    CG28
    SAVE_GCODE_STATE NAME=PARKREAR
    G90
    G0 X{printer.toolhead.axis_maximum.x-10} Y{printer.toolhead.axis_maximum.y-10} F30000     
    RESTORE_GCODE_STATE NAME=PARKREAR

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(160)|float %}

    # Turn on AUX fans
    UPDATE_DELAYED_GCODE ID=NEVERMORE_FAN_OFF DURATION=0
    SET_FAN_SPEED FAN=nevermore_fan SPEED=1.0

    # Set the nozzle and bed to the temperature that is ready to run the QGL and bed mesh
    # Non blocking
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

    # Do home if needed
    CG28                               ; Home XYZ (if necessary)
    G92 E0

    # Wait for the bed temperature to be settled
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP - 0.5}

    # Set the extruder temperature, allow overshoot
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP}

    # Do a retraction to minimise the oozing
    # G1 E-5 F3600

    # Move to above the purge line
    G90
    G0 Z10 F1000
    G0 X0 Y0 F5000

    # Reset the extruder
    G92 E0                         ; zero the extruder

    # Run the purge line before the actual print
    PURGE_LINE

    M83                                ; Make the E relative independant of other axis
    G92 E0                         ; zero the extruder
    G90
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_endstop"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up a bit 
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x / 2} Y{max_y-10} F3600       ; park nozzle at rear
    G0 Z{max_z - 1} F7200              ; Move to the highest

    # Cleanup the chamber air for another 10 minutes (if enabled)
    UPDATE_DELAYED_GCODE ID=NEVERMORE_FAN_OFF DURATION=600

  
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E100 F600                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   _ERCF_FORM_TIP_STANDALONE
   G1 E-150 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute


[gcode_macro _HOME_Z]
gcode:
    G90
    G28 Z

    # Move the heater bed up a bit
    G91
    G1 Z-5
    G90


# Replace M109 (Wait for Hotend Temperature) with TEMPERATURE_WAIT to allow temperature overshoot
[gcode_macro M109]
rename_existing: M109.1
gcode:
    #Parameters
    {% set s = params.S|float %}
    
	M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s - 0.5}
    {% endif %}


# Replace M190 (Wait for heater bed temperature with TEMPERATURE_WAIT) to allow temperature overshoot and under temperature (within 1 deg)
[gcode_macro M190]
rename_existing: M190.1
gcode:
    #Parameters
    {% set s = params.S|float %}
    
	M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set heater bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s - 0.5}
    {% endif %}


[gcode_macro PURGE_LINE]
gcode:
    SAVE_GCODE_STATE NAME=purge
    M117 Purge
    
    
    # Move nozzle to the beginning of the purge line
    G90
    G0 Z10 F1000
    G0 X0 Y0 F5000
    G0 Z0.3 F1000  ; Move down the nozzle and get ready
    G92 E0 ; Reset Extruder
    
    G91  ; enable relative movement
    G1 X100 F1000 E10  ; Draw the first line by moving the 100mm
    G1 Y0.8 F5000 ; Move to the side by 0.6mm
    G1 X-60 F1000 E10  ; Draw the second line
    G92 E0  ; Reset extruder
    
    G0 Z1 F1000  ; Move the nozzle up to prevent hitting anything
    
    RESTORE_GCODE_STATE NAME=purge


[delayed_gcode NEVERMORE_FAN_OFF]
gcode:
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0



# StandAlone cooling moves to extract proper filament tip
[gcode_macro _ERCF_FORM_TIP_STANDALONE]
description: Generic tip forming macro
gcode:
    {% set COOLING_TUBE_LENGTH = params.COOLING_TUBE_LENGTH|default(15) %} # Dragon ST: 15, Dragon HF: 10, Mosquito: 20
    {% set COOLING_TUBE_RETRACTION = params.COOLING_TUBE_RETRACTION|default(35) %} # Dragon ST: 35, Dragon HF: 30, Mosquito: 38
    {% set INITIAL_COOLING_SPEED = params.INITIAL_COOLING_SPEED|default(10) %}
    {% set FINAL_COOLING_SPEED = params.FINAL_COOLING_SPEED|default(50) %}
    {% set COOLING_MOVES = params.COOLING_MOVES|default(5) %}
    {% set TOOLCHANGE_TEMP = params.TOOLCHANGE_TEMP|default(0) %}
    {% set USE_SKINNYDIP = params.USE_SKINNYDIP|default(0) %}
    {% set USE_FAST_SKINNYDIP = params.USE_FAST_SKINNYDIP|default(1) %}
    {% set SKINNYDIP_DISTANCE = params.SKINNYDIP_DISTANCE|default(26) %}
    {% set DIP_INSERTION_SPEED = params.DIP_INSERTION_SPEED|default(33) %}
    {% set DIP_EXTRACTION_SPEED = params.DIP_EXTRACTION_SPEED|default(70) %}
    {% set MELT_ZONE_PAUSE = params.MELT_ZONE_PAUSE|default(0) %}
    {% set COOLING_ZONE_PAUSE = params.COOLING_ZONE_PAUSE|default(0) %}
    {% set UNLOADING_SPEED_START = params.UNLOADING_SPEED_START|default(199) %}
    {% set UNLOADING_SPEED = params.UNLOADING_SPEED|default(20) %}
    {% set RAMMING_VOLUME = params.RAMMING_VOLUME|default(0) %} # in mm3
    {% set INITIAL_RETRACT = params.INITIAL_RETRACT|default(0) %} # Use an initial retract or not. Don't use it if you want to ram the filament
    {% set FINAL_EJECT = params.FINAL_EJECT|default(0) %} # Fully eject the filament afterwards, default is no

    G91
    G92 E0

    # SET_PRESSURE_ADVANCE ADVANCE=0
    {% set OLD_TEMP = printer.extruder.target %}

    # Ramming with SuperSlicer standard setting
    {% if INITIAL_RETRACT|int == 1 %}
        G1 E-8.5000 F3000
    {% endif %}

    {% set RATIO = (RAMMING_VOLUME|float) /23.0 %}

    G1 E{0.5784 * RATIO|float} F299 #7
    G1 E{0.5834 * RATIO|float} F302 #3
    G1 E{0.5918 * RATIO|float} F306 #6
    G1 E{0.6169 * RATIO|float} F319 #6
    G1 E{0.3393 * RATIO|float} F350 #0
    G1 E{0.3363 * RATIO|float} F350 #0
    G1 E{0.7577 * RATIO|float} F392 #6
    G1 E{0.8382 * RATIO|float} F434 #3
    G1 E{0.7776 * RATIO|float} F469 #9
    G1 E{0.1293 * RATIO|float} F469 #9
    G1 E{0.9673 * RATIO|float} F501 #2
    G1 E{1.0176 * RATIO|float} F527 #2
    G1 E{0.5956 * RATIO|float} F544 #6
    G1 E{0.4555 * RATIO|float} F544 #6
    G1 E{1.0662 * RATIO|float} F552 #4

    # set toolchange temperature just prior to filament being extracted from melt zone and wait for set point
    # (SKINNYDIP--normal mode only)
    {% if TOOLCHANGE_TEMP|float > 0 and USE_FAST_SKINNYDIP|int == 0 %}
       M109 S{TOOLCHANGE_TEMP}
    {% endif %}

    # Retraction
    {% set TOTAL_RETRACTION_DISTANCE = COOLING_TUBE_RETRACTION|float + COOLING_TUBE_LENGTH|float / 2 - 15 %}
    G1 E-15 F{1.0 * UNLOADING_SPEED_START|float * 60}
    G1 E-{0.7 * TOTAL_RETRACTION_DISTANCE} F{1.0 * UNLOADING_SPEED|float * 60}
    G1 E-{0.2 * TOTAL_RETRACTION_DISTANCE} F{0.5 * UNLOADING_SPEED|float * 60}
    G1 E-{0.1 * TOTAL_RETRACTION_DISTANCE} F{0.3 * UNLOADING_SPEED|float * 60}

    {% if TOOLCHANGE_TEMP|float > 0 and USE_FAST_SKINNYDIP|int == 1 %}
       M104 S{TOOLCHANGE_TEMP}
    {% endif %}

    # Generate Cooling Moves
    {% set SPEED_INC = (FINAL_COOLING_SPEED|float - INITIAL_COOLING_SPEED|float) / (2 * COOLING_MOVES|float - 1) %}
    {% for move in range(COOLING_MOVES|int) %}
      G1 E{COOLING_TUBE_LENGTH} F{(INITIAL_COOLING_SPEED|float + SPEED_INC*move*2) * 60}
      G1 E-{COOLING_TUBE_LENGTH} F{(INITIAL_COOLING_SPEED|float + SPEED_INC*(move*2+1)) * 60}
    {% endfor %}

    # wait for extruder to reach toolchange temperature after cooling moves complete (SKINNYDIP--fast mode only)
    {% if TOOLCHANGE_TEMP|float > 0 and USE_FAST_SKINNYDIP|int == 1 %}
        M109 S{TOOLCHANGE_TEMP}
    {% endif %}

    # Generate a skinnydip move
    {% if USE_SKINNYDIP|int == 1 %}
      G1 E{SKINNYDIP_DISTANCE} F{DIP_INSERTION_SPEED|float * 60}
      G4 P{MELT_ZONE_PAUSE}
      G1 E-{SKINNYDIP_DISTANCE} F{DIP_EXTRACTION_SPEED|float * 60}
      G4 P{COOLING_ZONE_PAUSE}
    {% endif %}

    {% if TOOLCHANGE_TEMP|float > 0 %}
      M104 S{OLD_TEMP}
    {% endif %}

    {% if FINAL_EJECT|int == 1 %}
        G92 E0
        G1 E-80 F3000
    {% endif %}

    G92 E0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.129
#*# pid_ki = 3.025
#*# pid_kd = 65.398
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 42.307
#*# pid_ki = 2.256
#*# pid_kd = 198.309
#*#
#*# [stepper_z]
#*# position_endstop = 118.15
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 69.4
#*# shaper_type_y = mzv
#*# shaper_freq_y = 58.2
